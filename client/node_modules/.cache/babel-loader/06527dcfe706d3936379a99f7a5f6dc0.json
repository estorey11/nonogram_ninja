{"ast":null,"code":"import _defineProperty from \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/GridContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Grid from '../components/nons/Grid';\nimport { connect } from 'react-redux';\nimport SubmitButton from '../components/SubmitButton';\nimport { rightClickCell, mouseDownOnCell, mouseOverCell, mouseUp, seeSolution } from '../actions/nonActions';\nimport SubmitSolutionAlert from '../components/SubmitSolutionAlert';\n\nclass GridContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSubmit: true,\n      wrongCellCoords: [],\n      solutionAlert: {\n        show: false,\n        variant: 'danger',\n        text: 'This solution is incorrect. Would you like to see the answer or try again?',\n        buttonShow: true\n      }\n    };\n\n    this.handleMouseEvents = event => {\n      if (event.type === 'mousedown') {\n        this.props.mouseDownOnCell(event.target.id);\n      } else if (event.type === 'mouseover') {\n        this.props.mouseOverCell(event.target.id);\n      } else if (event.type === 'mouseup') {\n        this.props.mouseUp();\n      } else if (event.type === 'contextmenu') {\n        event.preventDefault();\n        this.props.rightClickCell(event.target.id);\n      }\n    };\n\n    this.handleTryAgain = () => {\n      this.setState(_objectSpread({}, this.state, {\n        solutionAlert: _objectSpread({}, this.state.solutionAlert, {\n          show: false\n        })\n      }));\n    };\n\n    this.handleSeeSolution = () => {\n      this.props.seeSolution(this.state.wrongCellCoords, this.props.gridSolution);\n      this.setState(_objectSpread({}, this.state, {\n        showSubmit: false,\n        solutionAlert: _objectSpread({}, this.state.solutionAlert, {\n          show: false\n        })\n      }));\n    };\n\n    this.handleSubmitClick = event => {\n      let wrongCellCoords = this.getWrongCells();\n\n      if (wrongCellCoords.length === 0) {\n        this.setState(_objectSpread({}, this.state, {\n          solutionAlert: {\n            show: true,\n            variant: 'success',\n            text: 'Congratulations! You solved the nonogram!',\n            buttonShow: false\n          }\n        }));\n      } else {\n        this.setState(_objectSpread({}, this.state, {\n          wrongCellCoords: wrongCellCoords,\n          solutionAlert: {\n            show: true,\n            variant: 'danger',\n            text: 'This solution is incorrect. Would you like to see the answer or try again?',\n            buttonShow: true\n          }\n        }));\n      }\n    };\n  }\n\n  getWrongCells() {\n    let wrongCellCoords = [];\n    this.props.gridSolution.forEach((rowSolution, y) => {\n      rowSolution.forEach((cellSolution, x) => {\n        if (cellSolution === 1 && this.props.grid[y][x] != 1) {\n          wrongCellCoords.push([x, y]);\n        }\n\n        if (cellSolution === 0 && this.props.grid[y][x] === 1) {\n          wrongCellCoords.push([x, y]);\n        }\n      });\n    });\n    return wrongCellCoords;\n  }\n\n  renderSubmit() {\n    const submitButton = React.createElement(SubmitButton, {\n      handleOnClick: this.handleSubmitClick,\n      label: \"Submit Solution\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    });\n\n    if (this.state.showSubmit) {\n      return {\n        submitButton\n      };\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.renderSubmit(), React.createElement(SubmitSolutionAlert, {\n      variant: this.state.solutionAlert.variant,\n      text: this.state.solutionAlert.text,\n      show: this.state.solutionAlert.show,\n      buttonShow: this.state.solutionAlert.buttonShow,\n      tryAgain: this.handleTryAgain,\n      seeSolution: this.handleSeeSolution,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      grid: this.props.grid,\n      rowClues: this.props.rowClues,\n      colClues: this.props.colClues,\n      handleMouseEvents: this.handleMouseEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  grid: state.non.grid,\n  rowClues: state.non.rowClues,\n  colClues: state.non.colClues,\n  gridSolution: state.non.gridSolution\n});\n\nexport default connect(mapStateToProps, {\n  rightClickCell,\n  mouseDownOnCell,\n  mouseOverCell,\n  mouseUp,\n  seeSolution\n})(GridContainer);","map":{"version":3,"sources":["/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/GridContainer.js"],"names":["React","Component","Grid","connect","SubmitButton","rightClickCell","mouseDownOnCell","mouseOverCell","mouseUp","seeSolution","SubmitSolutionAlert","GridContainer","state","showSubmit","wrongCellCoords","solutionAlert","show","variant","text","buttonShow","handleMouseEvents","event","type","props","target","id","preventDefault","handleTryAgain","setState","handleSeeSolution","gridSolution","handleSubmitClick","getWrongCells","length","forEach","rowSolution","y","cellSolution","x","grid","push","renderSubmit","submitButton","render","rowClues","colClues","mapStateToProps","non"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '../components/nons/Grid'\nimport { connect } from 'react-redux'\nimport SubmitButton from '../components/SubmitButton'\nimport {rightClickCell, mouseDownOnCell, mouseOverCell, mouseUp, seeSolution} from '../actions/nonActions'\nimport SubmitSolutionAlert from '../components/SubmitSolutionAlert'\n\nclass GridContainer extends Component {\n\n  state={\n    showSubmit: true,\n    wrongCellCoords: [],\n    solutionAlert: {\n      show: false,\n      variant: 'danger',\n      text: 'This solution is incorrect. Would you like to see the answer or try again?',\n      buttonShow: true,\n    }\n  }\n\n  handleMouseEvents=event=>{\n    if (event.type==='mousedown'){this.props.mouseDownOnCell(event.target.id)}\n    else if (event.type==='mouseover'){this.props.mouseOverCell(event.target.id)}\n    else if (event.type==='mouseup'){this.props.mouseUp()}\n    else if (event.type==='contextmenu') {\n      event.preventDefault()\n      this.props.rightClickCell(event.target.id)\n    }\n  }\n\n  handleTryAgain=()=>{\n    this.setState({...this.state, solutionAlert: {\n      ...this.state.solutionAlert,\n      show: false,\n    }})\n  }\n\n  handleSeeSolution=()=>{\n    this.props.seeSolution(this.state.wrongCellCoords, this.props.gridSolution)\n    this.setState({...this.state,\n      showSubmit: false,\n      solutionAlert: {\n        ...this.state.solutionAlert,\n        show: false,\n    }})\n  }\n\n  handleSubmitClick=event=>{\n\n    let wrongCellCoords=this.getWrongCells()\n\n    if(wrongCellCoords.length===0){\n      this.setState({...this.state, solutionAlert: {\n        show: true,\n        variant: 'success',\n        text: 'Congratulations! You solved the nonogram!',\n        buttonShow: false\n      }})\n    }\n\n    else {this.setState({\n      ...this.state,\n      wrongCellCoords: wrongCellCoords,\n      solutionAlert: {\n        show: true,\n        variant: 'danger',\n        text: 'This solution is incorrect. Would you like to see the answer or try again?',\n        buttonShow: true,\n      }\n      })\n    }\n  }\n\n  getWrongCells(){\n    let wrongCellCoords=[]\n\n    this.props.gridSolution.forEach((rowSolution, y)=>{\n      rowSolution.forEach((cellSolution, x)=>{\n        if(cellSolution===1 && this.props.grid[y][x]!=1){wrongCellCoords.push([x, y])}\n        if(cellSolution===0 && this.props.grid[y][x]===1){wrongCellCoords.push([x, y])}\n      }\n      )}\n    )\n\n    return wrongCellCoords\n  }\n\n  renderSubmit(){\n    const submitButton=<SubmitButton handleOnClick={this.handleSubmitClick} label=\"Submit Solution\"/>\n\n    if (this.state.showSubmit){ return {submitButton}}\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        {this.renderSubmit()}\n        <SubmitSolutionAlert\n          variant={this.state.solutionAlert.variant}\n          text={this.state.solutionAlert.text}\n          show={this.state.solutionAlert.show}\n          buttonShow={this.state.solutionAlert.buttonShow}\n          tryAgain={this.handleTryAgain}\n          seeSolution={this.handleSeeSolution}/>\n        <Grid\n          grid={this.props.grid}\n          rowClues={this.props.rowClues}\n          colClues={this.props.colClues}\n          handleMouseEvents={this.handleMouseEvents}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ grid: state.non.grid, rowClues: state.non.rowClues, colClues: state.non.colClues, gridSolution: state.non.gridSolution })\n\n\n\nexport default connect(mapStateToProps, {rightClickCell, mouseDownOnCell, mouseOverCell, mouseUp, seeSolution})(GridContainer)\n"]},"metadata":{},"sourceType":"module"}