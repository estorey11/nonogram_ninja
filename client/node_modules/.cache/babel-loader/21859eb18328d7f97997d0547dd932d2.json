{"ast":null,"code":"import _defineProperty from \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/GridContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Grid from '../components/nons/Grid';\nimport { connect } from 'react-redux';\nimport SubmitButton from '../components/SubmitButton';\nimport { rightClickCell, mouseDownOnCell, mouseOverCell, mouseUp } from '../actions/nonActions';\n\nclass GridContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      wrongCellCoords: []\n    };\n\n    this.handleMouseEvents = event => {\n      if (event.type === 'mousedown') {\n        this.props.mouseDownOnCell(event.target.id);\n      } else if (event.type === 'mouseover') {\n        this.props.mouseOverCell(event.target.id);\n      } else if (event.type === 'mouseup') {\n        this.props.mouseUp();\n      } else if (event.type === 'contextmenu') {\n        event.preventDefault();\n        this.props.rightClickCell(event.target.id);\n      }\n    };\n\n    this.handleSubmitClick = event => {\n      this.setState(_objectSpread({}, state, {\n        wrongCellCoords: getWrongCells()\n      }));\n    };\n  }\n\n  getWrongCells() {\n    let wrongCellCoords = [];\n    this.props.gridSolution.forEach((rowSolution, y) => {\n      rowSolution.forEach((cellSolution, x) => {\n        if (cellSolution === 1 && this.props.grid[y][x] != 1) {\n          wrongCellCoords.push([x, y]);\n        }\n\n        if (cellSolution === 0 && this.props.grid[y][x] === 1) {\n          wrongCellCoords.push([x, y]);\n        }\n      });\n    });\n    return wrongCellCoords;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(SubmitButton, {\n      handleOnClick: this.handleSubmitClick,\n      label: \"Submit Solution\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      grid: this.props.grid,\n      rowClues: this.props.rowClues,\n      colClues: this.props.colClues,\n      handleMouseEvents: this.handleMouseEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  grid: state.non.grid,\n  rowClues: state.non.rowClues,\n  colClues: state.non.colClues,\n  gridSolution: state.non.gridSolution\n});\n\nexport default connect(mapStateToProps, {\n  rightClickCell,\n  mouseDownOnCell,\n  mouseOverCell,\n  mouseUp\n})(GridContainer);","map":{"version":3,"sources":["/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/GridContainer.js"],"names":["React","Component","Grid","connect","SubmitButton","rightClickCell","mouseDownOnCell","mouseOverCell","mouseUp","GridContainer","state","wrongCellCoords","handleMouseEvents","event","type","props","target","id","preventDefault","handleSubmitClick","setState","getWrongCells","gridSolution","forEach","rowSolution","y","cellSolution","x","grid","push","render","rowClues","colClues","mapStateToProps","non"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '../components/nons/Grid'\nimport { connect } from 'react-redux'\nimport SubmitButton from '../components/SubmitButton'\nimport {rightClickCell, mouseDownOnCell, mouseOverCell, mouseUp} from '../actions/nonActions'\n\n\nclass GridContainer extends Component {\n\n  state={wrongCellCoords: []}\n\n  handleMouseEvents=event=>{\n    if (event.type==='mousedown'){this.props.mouseDownOnCell(event.target.id)}\n    else if (event.type==='mouseover'){this.props.mouseOverCell(event.target.id)}\n    else if (event.type==='mouseup'){this.props.mouseUp()}\n    else if (event.type==='contextmenu') {\n      event.preventDefault()\n      this.props.rightClickCell(event.target.id)\n    }\n  }\n\n\n  handleSubmitClick=event=>{\n    this.setState({...state, wrongCellCoords: getWrongCells()})\n\n  }\n\n  getWrongCells(){\n    let wrongCellCoords=[]\n\n    this.props.gridSolution.forEach((rowSolution, y)=>{\n      rowSolution.forEach((cellSolution, x)=>{\n        if(cellSolution===1 && this.props.grid[y][x]!=1){wrongCellCoords.push([x, y])}\n        if(cellSolution===0 && this.props.grid[y][x]===1){wrongCellCoords.push([x, y])}\n      }\n      )}\n    )\n\n    return wrongCellCoords\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <SubmitButton handleOnClick={this.handleSubmitClick} label=\"Submit Solution\"/>\n\n        <Grid grid={this.props.grid} rowClues={this.props.rowClues} colClues={this.props.colClues} handleMouseEvents={this.handleMouseEvents}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ grid: state.non.grid, rowClues: state.non.rowClues, colClues: state.non.colClues, gridSolution: state.non.gridSolution })\n\n\n\nexport default connect(mapStateToProps, {rightClickCell, mouseDownOnCell, mouseOverCell, mouseUp})(GridContainer)\n"]},"metadata":{},"sourceType":"module"}