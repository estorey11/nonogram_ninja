{"ast":null,"code":"var _jsxFileName = \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/GridContainer.js\";\nimport React, { Component } from 'react';\nimport Grid from '../components/nons/Grid';\nimport { connect } from 'react-redux';\nimport SubmitButton from '../components/SubmitButton';\nimport { switchCell } from '../actions/nonActions';\n\nclass GridContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCellClick = event => {\n      this.props.switchCell(event.target.id);\n    };\n\n    this.handleSubmitClick = event => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(SubmitButton, {\n      handleOnClick: this.handleSubmitClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      grid: this.props.grid,\n      rowClues: this.props.rowClues,\n      colClues: this.props.colClues,\n      handleOnClick: this.handleCellClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  grid: state.non.grid,\n  rowClues: state.non.rowClues,\n  colClues: state.non.colClues,\n  gridSolution: state.non.gridSolution\n});\n\nconst mapDispatchToProps = dispatch => ({\n  switchCell: coords => dispatch({\n    type: 'SWITCH_CELL',\n    coords\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GridContainer);","map":{"version":3,"sources":["/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/GridContainer.js"],"names":["React","Component","Grid","connect","SubmitButton","switchCell","GridContainer","handleCellClick","event","props","target","id","handleSubmitClick","render","grid","rowClues","colClues","mapStateToProps","state","non","gridSolution","mapDispatchToProps","dispatch","coords","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAEpCM,eAFoC,GAEpBC,KAAK,IAAE;AACrB,WAAKC,KAAL,CAAWJ,UAAX,CAAsBG,KAAK,CAACE,MAAN,CAAaC,EAAnC;AACD,KAJmC;;AAAA,SAMpCC,iBANoC,GAMlBJ,KAAK,IAAE,CAExB,CARmC;AAAA;;AAWpCK,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,aAAa,EAAE,KAAKD,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWK,IAAvB;AAA6B,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QAAlD;AAA4D,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QAAjF;AAA2F,MAAA,aAAa,EAAE,KAAKT,eAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnBmC;;AAsBtC,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAAEJ,EAAAA,IAAI,EAAEI,KAAK,CAACC,GAAN,CAAUL,IAAlB;AAAwBC,EAAAA,QAAQ,EAAEG,KAAK,CAACC,GAAN,CAAUJ,QAA5C;AAAsDC,EAAAA,QAAQ,EAAEE,KAAK,CAACC,GAAN,CAAUH,QAA1E;AAAoFI,EAAAA,YAAY,EAAEF,KAAK,CAACC,GAAN,CAAUC;AAA5G,CAAL,CAA7B;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,UAAU,EAAGkB,MAAD,IAAYD,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,aAAP;AAAsBD,IAAAA;AAAtB,GAAD;AADM,CAAL,CAAnC;;AAKA,eAAepB,OAAO,CAACc,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '../components/nons/Grid'\nimport { connect } from 'react-redux'\nimport SubmitButton from '../components/SubmitButton'\nimport {switchCell} from '../actions/nonActions'\n\nclass GridContainer extends Component {\n\n  handleCellClick=event=>{\n    this.props.switchCell(event.target.id)\n  }\n\n  handleSubmitClick=event=>{\n\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <SubmitButton handleOnClick={this.handleSubmitClick}/>\n        <Grid grid={this.props.grid} rowClues={this.props.rowClues} colClues={this.props.colClues} handleOnClick={this.handleCellClick}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ grid: state.non.grid, rowClues: state.non.rowClues, colClues: state.non.colClues, gridSolution: state.non.gridSolution })\n\nconst mapDispatchToProps = dispatch => ({\n  switchCell: (coords) => dispatch({type: 'SWITCH_CELL', coords}),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GridContainer)\n"]},"metadata":{},"sourceType":"module"}