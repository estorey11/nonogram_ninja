{"ast":null,"code":"import _defineProperty from \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport default function manageNon(state = {\n  grid: [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]],\n  isFetching: false\n}, action) {\n  switch (action.type) {\n    case 'SWITCH_CELL<-------fix this':\n      const coords = action.coords.split(',');\n      const x = parseInt(coords[0]);\n      const y = parseInt(coords[1]);\n      let clickedGrid = [...state.grid];\n      clickedGrid[y][x] = clickedGrid[y][x] === 0 ? 1 : 0;\n      return _objectSpread({}, state, {\n        grid: clickedGrid\n      });\n\n    case 'START_NON_REQUEST':\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case 'ADD_NONOGRAMS':\n      return _objectSpread({}, state, {\n        isFetching: false,\n        nonograms: action.nonograms\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/reducers/manageNon.js"],"names":["manageNon","state","grid","isFetching","action","type","coords","split","x","parseInt","y","clickedGrid","nonograms"],"mappings":";;;;;;AAAA,eAAe,SAASA,SAAT,CAAmBC,KAAK,GAAG;AACxCC,EAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAD,EAAa,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAb,EAAyB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAzB,EAAqC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAArC,EAAiD,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAjD,CADkC;AAC6BC,EAAAA,UAAU,EAAE;AADzC,CAA3B,EAEZC,MAFY,EAEJ;AACT,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAK,6BAAL;AAEE,YAAMC,MAAM,GAAGF,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoB,GAApB,CAAf;AACA,YAAMC,CAAC,GAAGC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,CAAlB;AACA,YAAMI,CAAC,GAAGD,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,CAAlB;AACA,UAAIK,WAAW,GAAG,CAAC,GAAGV,KAAK,CAACC,IAAV,CAAlB;AAEAS,MAAAA,WAAW,CAACD,CAAD,CAAX,CAAeF,CAAf,IAAmBG,WAAW,CAACD,CAAD,CAAX,CAAeF,CAAf,MAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAA/C;AAEA,+BACKP,KADL;AAEEC,QAAAA,IAAI,EAAES;AAFR;;AAKF,SAAK,mBAAL;AAEE,+BAAWV,KAAX;AAAkBE,QAAAA,UAAU,EAAE;AAA9B;;AAEF,SAAK,eAAL;AAEE,+BAAWF,KAAX;AAAkBE,QAAAA,UAAU,EAAE,KAA9B;AAAqCS,QAAAA,SAAS,EAAER,MAAM,CAACQ;AAAvD;;AAEF;AACE,aAAOX,KAAP;AAzBJ;AA4BD;AAAA","sourcesContent":["export default function manageNon(state = {\n  grid: [[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]], isFetching: false\n}, action) {\n  switch (action.type) {\n\n    case 'SWITCH_CELL<-------fix this':\n\n      const coords = action.coords.split(',')\n      const x = parseInt(coords[0])\n      const y = parseInt(coords[1])\n      let clickedGrid = [...state.grid]\n\n      clickedGrid[y][x]=(clickedGrid[y][x]===0 ? 1 : 0)\n\n      return {\n        ...state,\n        grid: clickedGrid\n      }\n\n    case 'START_NON_REQUEST':\n\n      return {...state, isFetching: true}\n\n    case 'ADD_NONOGRAMS':\n\n      return {...state, isFetching: false, nonograms: action.nonograms}\n\n    default:\n      return state;\n\n  }\n};\n"]},"metadata":{},"sourceType":"module"}