{"ast":null,"code":"var _jsxFileName = \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/NewGridContainer.js\";\nimport React, { Component } from 'react';\nimport NewGrid from '../components/newNons/NewGrid';\nimport { connect } from 'react-redux';\nimport SubmitButton from '../components/SubmitButton';\nimport { postNonogram, mouseUp, mouseOverCell, mouseDownOnCell, rightClickCell } from '../actions/newNonActions';\nimport TextInput from '../components/TextInput';\nimport { withRouter } from 'react-router-dom';\n\nclass NewGridContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nameValue: \"\"\n    };\n\n    this.handleMouseEvents = event => {\n      if (event.type === 'mousedown') {\n        this.props.mouseDownOnCell(event.target.id);\n      } else if (event.type === 'mouseover') {\n        this.props.mouseOverCell(event.target.id);\n      } else if (event.type === 'mouseup') {\n        this.props.mouseUp();\n      } else if (event.type === 'contextmenu') {\n        event.preventDefault();\n        this.props.rightClickCell();\n      }\n    };\n\n    this.handleSubmitClick = event => {\n      this.props.postNonogram(this.gridConverter());\n      this.props.history.push('/nonograms');\n    };\n\n    this.gridConverter = () => {\n      const height = this.props.grid.length;\n      const width = this.props.grid[0].length;\n      const solution = this.solutionConverter();\n      return {\n        nonogram: {\n          height: height,\n          width: width,\n          solution: solution,\n          name: this.state.nameValue\n        }\n      };\n    };\n\n    this.solutionConverter = () => {\n      const solutionRows = this.props.grid.map(row => row.join(''));\n      return solutionRows.join('');\n    };\n\n    this.handleNameChange = event => {\n      this.setState({\n        nameValue: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SubmitButton, {\n      handleOnClick: this.handleSubmitClick,\n      label: \"Submit Nonogram\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      label: \"Nonogram Name:\",\n      value: this.state.nameValue,\n      handleOnChange: this.handleNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(NewGrid, {\n      grid: this.props.grid,\n      handleMouseEvents: this.handleMouseEvents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  grid: state.newNon.grid\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  postNonogram,\n  mouseUp,\n  mouseOverCell,\n  mouseDownOnCell,\n  rightClickCell\n})(NewGridContainer));","map":{"version":3,"sources":["/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/containers/NewGridContainer.js"],"names":["React","Component","NewGrid","connect","SubmitButton","postNonogram","mouseUp","mouseOverCell","mouseDownOnCell","rightClickCell","TextInput","withRouter","NewGridContainer","state","nameValue","handleMouseEvents","event","type","props","target","id","preventDefault","handleSubmitClick","gridConverter","history","push","height","grid","length","width","solution","solutionConverter","nonogram","name","solutionRows","map","row","join","handleNameChange","setState","value","render","mapStateToProps","newNon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NewGrid from '../components/newNons/NewGrid'\nimport { connect } from 'react-redux'\nimport SubmitButton from '../components/SubmitButton'\nimport {postNonogram, mouseUp, mouseOverCell, mouseDownOnCell, rightClickCell} from '../actions/newNonActions'\nimport TextInput from '../components/TextInput'\nimport {withRouter} from 'react-router-dom';\n\n\nclass NewGridContainer extends Component {\n\n  state={nameValue: \"\"}\n\n  handleMouseEvents=event=>{\n    if (event.type==='mousedown'){this.props.mouseDownOnCell(event.target.id)}\n    else if (event.type==='mouseover'){this.props.mouseOverCell(event.target.id)}\n    else if (event.type==='mouseup'){this.props.mouseUp()}\n    else if (event.type==='contextmenu') {\n      event.preventDefault()\n      this.props.rightClickCell()\n    }\n  }\n\n  handleSubmitClick=event=>{\n    this.props.postNonogram(this.gridConverter())\n    this.props.history.push('/nonograms');\n  }\n\n  gridConverter=()=>{\n    const height=this.props.grid.length\n    const width=this.props.grid[0].length\n    const solution=this.solutionConverter();\n\n    return {nonogram: {height: height, width: width, solution: solution, name: this.state.nameValue} }\n  }\n\n  solutionConverter=()=>{\n    const solutionRows=this.props.grid.map(row=>row.join(''))\n    return solutionRows.join('')\n  }\n\n  handleNameChange=event=>{\n    this.setState({nameValue: event.target.value})\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <SubmitButton handleOnClick={this.handleSubmitClick} label=\"Submit Nonogram\"/>\n        <TextInput label=\"Nonogram Name:\" value={this.state.nameValue} handleOnChange={this.handleNameChange}/>\n        <NewGrid grid={this.props.grid} handleMouseEvents={this.handleMouseEvents} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ grid: state.newNon.grid })\n\n\n\n\nexport default withRouter(connect(mapStateToProps, {postNonogram, mouseUp, mouseOverCell, mouseDownOnCell, rightClickCell})(NewGridContainer))\n"]},"metadata":{},"sourceType":"module"}