{"ast":null,"code":"var _jsxFileName = \"/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/components/nons/Grid.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\nimport '../../custom.css';\n\nclass Grid extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.mapGrid = () => {\n      const grid = this.props.grid.map((row, y) => {\n        return React.createElement(\"tr\", {\n          key: y,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, this.mapRow(row, y));\n      });\n      grid.unshift(this.mapColClues());\n      return grid;\n    };\n  }\n\n  mapColClues() {\n    let colClues = this.props.colClues.map(clueGroup => React.createElement(\"th\", {\n      class: \"colClue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, clueGroup.join('\\n')));\n    colClues.unshift(React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n    return colClues;\n  }\n\n  mapRow(row, y) {\n    let mappedRow = row.map((cell, x) => {\n      return React.createElement(\"td\", {\n        style: this.getCellStyle(cell),\n        key: x.toString() + ',' + y.toString(),\n        id: x.toString() + ',' + y.toString(),\n        onMouseDown: this.props.handleMouseEvents,\n        onMouseUp: this.props.handleMouseEvents,\n        onMouseOver: this.props.handleMouseEvents,\n        onContextMenu: this.props.handleMouseEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, cell === 'X' ? cell : '');\n    });\n    mappedRow.unshift(this.getRowClue(y));\n    return mappedRow;\n  }\n\n  getCellStyle(cell) {\n    switch (cell) {\n      case 0:\n        return {\n          backgroundColor: 'white'\n        };\n\n      case 1:\n        return {\n          backgroundColor: 'black'\n        };\n\n      case 2:\n        return {\n          backgroundColor: 'white',\n          outline: '1px solid red',\n          outlineOffset: '-1px'\n        };\n\n      case 3:\n        return {\n          backgroundColor: 'black',\n          outline: '1px solid red',\n          outlineOffset: '-3px'\n        };\n\n      case 'X':\n        return {\n          backgroundColor: 'white'\n        };\n\n      default:\n        return {\n          backgroundColor: 'white'\n        };\n    }\n  }\n\n  getRowClue(rowNum) {\n    return React.createElement(\"th\", {\n      class: \"rowClue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.rowClues[rowNum].join('\\xa0\\xa0\\xa0'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.mapGrid())));\n  }\n\n}\n\nexport default Grid;","map":{"version":3,"sources":["/Users/eric_storey/Desktop/Flatiron/nonogram_ninja/client/src/components/nons/Grid.js"],"names":["React","Component","Table","Grid","mapGrid","grid","props","map","row","y","mapRow","unshift","mapColClues","colClues","clueGroup","join","mappedRow","cell","x","getCellStyle","toString","handleMouseEvents","getRowClue","backgroundColor","outline","outlineOffset","rowNum","rowClues","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Table} from 'react-bootstrap'\nimport '../../custom.css'\n\n\nclass Grid extends Component {\n\n\n  mapGrid=()=>{\n\n    const grid = this.props.grid.map((row, y)=>{\n      return (<tr key={y}>{this.mapRow(row, y)}</tr>)\n    })\n\n    grid.unshift(this.mapColClues())\n\n    return grid;\n  }\n\n  mapColClues(){\n\n    let colClues=this.props.colClues.map(clueGroup=>\n      <th class=\"colClue\">{clueGroup.join('\\n')}</th>\n    )\n\n    colClues.unshift(<td></td>)\n\n    return colClues\n  }\n\n  mapRow(row, y){\n    let mappedRow = row.map((cell, x)=>{\n        return (<td\n          style={this.getCellStyle(cell)}\n          key={x.toString()+','+y.toString()}\n          id={x.toString()+','+y.toString()}\n          onMouseDown={this.props.handleMouseEvents}\n          onMouseUp={this.props.handleMouseEvents}\n          onMouseOver={this.props.handleMouseEvents}\n          onContextMenu={this.props.handleMouseEvents}>\n            { cell==='X' ? cell : '' }\n          </td> )\n    })\n\n    mappedRow.unshift(this.getRowClue(y))\n    return mappedRow\n  }\n\n  getCellStyle(cell){\n    switch (cell) {\n      case 0: return {backgroundColor: 'white'}\n      case 1: return {backgroundColor: 'black'}\n      case 2: return {backgroundColor: 'white',\n                      outline: '1px solid red',\n                      outlineOffset: '-1px'}\n      case 3: return {backgroundColor: 'black',\n                      outline: '1px solid red',\n                      outlineOffset: '-3px'}\n      case 'X': return {backgroundColor: 'white'}\n      default: return {backgroundColor: 'white'}\n    }\n  }\n\n  getRowClue(rowNum){\n    return (<th class=\"rowClue\">{this.props.rowClues[rowNum].join('\\xa0\\xa0\\xa0')}</th>)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <table>\n          <tbody>\n            {this.mapGrid()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Grid\n"]},"metadata":{},"sourceType":"module"}